layout: post
title: Thoughts on tooling
category: Programming
tag: Coding
tags:
      - tooling
content: |

  Over the years I've come to understand the importance of excellent tools.
  Whether I'm working on our van, or around the house, tooling makes all the
  difference. This fall I decided I wasn't going to rake leaves anymore. Last
  year we spent forever using a little leaf blower and a rake. It seems like an
  impossible job.

  This year I spent $500 and bought a backpack leafblower. I know, right? Yes,
  it was kind of crazy, but sweet baby, I spent a total of a few hours over a
  couple weeks to get all the leaves off our yard this fall. Unheard of! Not
  only did I save days of misery, I also saved my back and body.

  Great tools don't have to be expensive or complex though. One of my favorite
  tools only cost me a few dollars at the store. I remember in my early days
  my wife wanted to hang pictures in our new apartment. I spent a long time
  measuring from the ceiling down to where we wanted the picture. It required
  two nails so two measurements. It probably took 10 minutes just to get the
  placement. Insert the nails, hang the picture, step back aaaaand its crooked.
  Later on I bought a level. The last picture I hung for my wife took 30
  seconds and was perfectly straight.

  The quality of a tool is a function of the leverage it applies to our
  productivity. The more time saved, the greater quality delivered, the better
  the tool.

  Tooling in software development is no different from the physical world.
  Tools which increase our productivity are desirable. Of course, given the
  choice between two tools, we will always choose the most productive, but
  the decision isn't usually that straightforward.

  It takes time to explore tooling, and try things out. Many times it feels like we're here.

  ![kingdom](https://docs.google.com/uc?id=1xqFJSJZ6r3_YWzDtcqnirGbtYU3wGKfs)

  When we're really here :)

  ![nowhere](https://docs.google.com/uc?id=1nWLMOrRmklqGWKdiZNWfOx598HPHMT8l)

  It takes time to develop good software tooling. It doesn't have to be all
  complex either. Some of the best tooling is simple. Good tools make all the
  difference!
